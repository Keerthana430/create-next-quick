name: Post Test Results

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types: [completed]

permissions:
  contents: read
  issues: write
  pull-requests: write
  actions: read

jobs:
  comment-on-pr:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Download artifacts from all Node versions
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

    - name: Parse test logs
      id: parse-logs
      run: |
        import fs from 'fs';
        import path from 'path';

        const artifactsDir = './artifacts';
        const summaries = [];

        const dirs = fs.readdirSync(artifactsDir, { withFileTypes: true })
          .filter(d => d.isDirectory())
          .map(d => path.join(artifactsDir, d.name));

        for (const dir of dirs) {
          const logFile = path.join(dir, 'log.txt');
          if (!fs.existsSync(logFile)) {
            summaries.push({ nodeVersion: path.basename(dir), status: '❌ Log missing' });
            continue;
          }

          const log = fs.readFileSync(logFile, 'utf8');
          const passed = (log.match(/✓/g) || []).length;
          const failed = (log.match(/✗/g) || []).length;
          const status = failed === 0 ? '✅ Passed' : '❌ Failed';

          summaries.push({
            nodeVersion: path.basename(dir),
            passes: passed,
            failures: failed,
            status
          });
        }

        fs.writeFileSync('./artifacts/parsed-summary.json', JSON.stringify(summaries, null, 2));
        console.log('✅ Parsed summary ready');


      - name: Post comment on Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const summaryPath = './artifacts/parsed-summary.json';
            if (!require('fs').existsSync(summaryPath)) {
              console.log('No summary to post');
              return;
            }

            const summaries = JSON.parse(require('fs').readFileSync(summaryPath, 'utf8'));
            let commentBody = '### 📝 CI/CD Test Summary for Node.js matrix:\n\n';
            summaries.forEach(s => {
              if (s.passes !== undefined) {
                commentBody += `**Node ${s.nodeVersion}**: ${s.status} (Passes: ${s.passes}, Failures: ${s.failures})\n`;
              } else {
                commentBody += `**Node ${s.nodeVersion}**: ${s.status}\n`;
              }
            });

            // Only comment on the pull request that triggered the workflow
            const prNumber = github.event.workflow_run.pull_requests[0]?.number;
            if (!prNumber) {
              console.log('No pull request associated with this run.');
              return;
            }

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: commentBody
            });

            console.log('✅ Comment posted to PR #' + prNumber);